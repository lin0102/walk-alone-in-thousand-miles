var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameUI_1 = require("./script/GameUI");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/GameUI.ts", GameUI_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/TestScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/GameUI":4}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CameraMoveScript = /** @class */ (function (_super) {
    __extends(CameraMoveScript, _super);
    function CameraMoveScript() {
        var _this = _super.call(this) || this;
        _this._tempVector3 = new Laya.Vector3();
        return _this;
    }
    CameraMoveScript.prototype.onAwake = function () {
        this.camera = this.owner;
    };
    CameraMoveScript.prototype.onUpdate = function () {
        this.moveForward(-0.03);
    };
    CameraMoveScript.prototype.moveForward = function (distance) {
        this._tempVector3.x = this._tempVector3.y = 0;
        this._tempVector3.z = distance;
        this.camera.transform.translate(this._tempVector3);
    };
    return CameraMoveScript;
}(Laya.Script3D));
exports.default = CameraMoveScript;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var CameraMove_1 = require("./CameraMove");
var marshalMove_1 = require("./marshalMove");
var GameUI = /** @class */ (function (_super) {
    __extends(GameUI, _super);
    function GameUI() {
        var _this = _super.call(this) || this;
        var MAXNUMOFSCENE = 1000;
        Laya.Scene3D.load("res/marshal.ls", Laya.Handler.create(null, function (s) {
            var scene = Laya.stage.addChild(s);
            scene.enableFog = true;
            scene.fogStart = 1;
            scene.fogRange = 10;
            var sceneMesh = scene.getChildByName('cjMerge');
            var cloneScenes = [];
            for (var i_1 = 0; i_1 < MAXNUMOFSCENE; i_1++) {
                var cloneScene = sceneMesh.clone();
                cloneScenes.push(cloneScene);
            }
            var i = 0;
            while (i < 50) {
                scene.addChild(cloneScenes[i++]);
                cloneScenes[i].transform.translate(new Laya.Vector3(0, 0, -3.54 * i), false);
            }
            function loadMoreScene() {
                scene.addChild(cloneScenes[i++]);
                cloneScenes[i].transform.translate(new Laya.Vector3(0, 0, -3.54 * i), false);
                if (i === MAXNUMOFSCENE) {
                    Laya.timer.clear(this, loadMoreScene);
                }
            }
            Laya.timer.loop(2000, this, loadMoreScene);
            var camera = scene.getChildByName('Camera');
            camera.addComponent(CameraMove_1.default);
            var marshal = scene.getChildByName('jiang');
            marshal.addComponent(marshalMove_1.default);
        }));
        return _this;
    }
    GameUI.prototype.test = function () {
    };
    return GameUI;
}(layaMaxUI_1.ui.test.TestSceneUI));
exports.default = GameUI;
},{"./../ui/layaMaxUI":6,"./CameraMove":3,"./marshalMove":5}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var marshalMove = /** @class */ (function (_super) {
    __extends(marshalMove, _super);
    function marshalMove() {
        var _this = _super.call(this) || this;
        _this.pos = 'm';
        return _this;
    }
    marshalMove.prototype.onAwake = function () {
        this.marshal = this.owner;
        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.mouseDown);
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.mouseUp);
    };
    marshalMove.prototype.onUpdate = function () {
        this.marshal.transform.translate(new Laya.Vector3(0, 0, -0.03), false);
    };
    marshalMove.prototype.mouseDown = function () {
        this.x = Laya.stage.mouseX;
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
        Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.onMouseUp);
    };
    marshalMove.prototype.mouseUp = function () {
        this.distance = Laya.stage.mouseX - this.x;
        if (this.distance > 100) {
            switch (this.pos) {
                case 'l':
                    this.marshal.transform.translate(new Laya.Vector3(0.32, 0, 0), false);
                    this.pos = 'm';
                    break;
                case 'm':
                    this.marshal.transform.translate(new Laya.Vector3(0.32, 0, 0), false);
                    this.pos = 'r';
                    break;
                default:
                    return;
            }
        }
        else if (this.distance < -100) {
            switch (this.pos) {
                case 'r':
                    this.marshal.transform.translate(new Laya.Vector3(-0.32, 0, 0), false);
                    this.pos = 'm';
                    break;
                case 'm':
                    this.marshal.transform.translate(new Laya.Vector3(-0.32, 0, 0), false);
                    this.pos = 'l';
                    break;
                default:
                    return;
            }
        }
    };
    return marshalMove;
}(Laya.Script3D));
exports.default = marshalMove;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var test;
    (function (test) {
        var TestSceneUI = /** @class */ (function (_super) {
            __extends(TestSceneUI, _super);
            function TestSceneUI() {
                return _super.call(this) || this;
            }
            TestSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/TestScene");
            };
            return TestSceneUI;
        }(Laya.Scene));
        test.TestSceneUI = TestSceneUI;
        REG("ui.test.TestSceneUI", TestSceneUI);
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
